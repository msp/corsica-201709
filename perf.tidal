cps 1

cps (125/60/4)

let ch1_2 = 0
let ch3_4 = 0
let ch5_6 = 0
let ch7_8 = 0

let silence1 = const $ degradeBy 0.3 $ sound "~"

let (f, f_p) = pF "f" (Just 440)

let pat = "bd sd"::Pattern String

(cps, nudger, getNow) <- cpsUtils'

now <- getNow

nudger (0.01)



-- sync test

cps (130/60/4)


d1
$ degradeBy 0.2
$ sometimesBy 0.4 (# crush 4)
$ sound "bass odx:8?*8 odx odx:2?*4"
# gain "1 0.9 1 1"

d1
$ sometimesBy 0.4 (# crush 4)
$ fast 1
$ degradeBy 0.1
$ sound "gabba*4"
# shape 0.4

d1
$ sound "bd:5*2"
# shape 0.7
# gain 0.8

d1 silence

hush

/***************************************
 ************* CORSICA  ****************
 ***************************************/

hush

$ every 15 (silence1)
$ every 8 (silence1)
$ every 4 (silence1)

-- start 11, 7, 3, (1), 0
-- 150 ish

d1
$ sometimesBy 0.25 (# crush 4)
$ degradeBy 0
$ sound "[form-msp5:0*11]"
# gain 0.8
# shape 0.5
# legato 5
# speed (choose [0.9, 1 , 1.05])
# pan (scale 0 1 (slow 2 saw1))
# hpf 00

d2
$ sometimesBy 0.25 (# crush 4)
$ degradeBy 0
$ sound "[808bd:1(1,8), Xsd:3(6,8)?]"
# gain "0.9"
# shape 0.5
# legato 5
# speed (choose [0.9, 1 , 1.05])
# pan (scale 0 1 (slow 2 saw1))








/*************** LOOP ***************** /

/* WONKY */

d5
$ every 16 (0.25 <~)
$ spread ($) [fast 2, (# speed (scale 1 1.2 $ slow 5 $ saw1)), slow 2]
$ stack [
  sound "<form-msp2*2 form-msp2*4? [form-msp2*3? form-msp2] ~ ~ ~ ~ ~ ~ ~ ~ >"
]
# end 0.8
# speed "1.5"
# shape 0.3
# gain "1.2 1.0 0.8"
# room (scale 0.1 0.2 (slow 3 (sine)))
# size (scale 0.1 0.4 (slow 8 (sine)))
# orbit ch1_2

/* STRAIGHT */

hush

cps 1

d5
$ fast 4
$ stack [
  sound "<form-msp2*2 form-msp2*4? form-msp2> / 2",
  sound "<[techno:3/2 ~ ~ stab:2/16?]/2 <sd industrial:2 industrial:3 industrial:5*5? >> / 2"
]
# end 0.3
# speed "1.5 1.3 1.8 -0.5"
# gain "1.4 0.8"
# shape 0.4
# orbit ch1_2
# cut 1

# accelerate (scale 0.7 0.1 (slow 10 (sine)))
# crush (scale 4 10 (slow 10 (sine)))
# cutoff (scale 0 22000 $ slow 2 saw1)

# delay 0.1
# delaytime 0.1
# delayfeedback (scale 0.1 0.8 $ slow 10 $ sine1)

# speed "1.5 1 1.8 -0.5"

d5 silence

-- 140 4/4
cps (140/60/2)

hush

d1 $ sound "<~ [supergong*4]>" # gain 0.8



/***************************************
 *************** PLAYGROUND ************
 ***************************************/



 $ sound "[msp/2 bd bd, sd cp sd hh ~ ~]"
 $ every 4 (0.5 <~)

 $ spread ($) [(# speed (scale 0.1 0.8 $ slow 5 $ sine1))]

d1
$ fast 1
$ degradeBy 0.25
$ sound "form-msp5 form-msp5*6"
# n (run (irand(10)))
# gain 1
# cut 1

# note (irand(10))

d1 $ degradeBy 0.25 $ sound "bd*8 sd*4"

d1 $ sometimesBy 0.25 (# crush 4) $ sound "bd arpy sn ~"



d1 silence


now <- getNow

d1 $ (pure now) ~> seqPLoop [
  (4, 12, sound "hh*2 [sn cp] cp future*4"),
  (0, 12, sound (samples "arpy*8" (run 16)))
]


hush

-- import System.IO.Unsafe
-- showCycle x = unsafePerformIO (print x >> return True)
-- d1 $ when showCycle (# gain 1) (sound "bd")
d1 silence

d3
$ slow 4
$ every 16 (0.25 <~)
$ stut 7 0.2 0.3
$ stack
  [ n "ds7 [ds7 d7] c7 ~ ~ ~ ~" # s "imp" # sustain 0.2
  ]
# sustain 0.9
# gain 0.9
# vowel "a e i"

d3 silence



d1 $ bells

hush

d1 $ sound "techno:1 techno:1"
# shape 0.8
# gain "1 0.9"
# speed "0.8 1.1"
# room (scale 0.2 0.1 (slow 3 (sine)))
# size (scale 0.1 0.9 (slow 2 (sine)))

d1 silence


d1
$ degradeBy 0.1
$ sound
$ shuffle 3 "[bass2:4 bass2:0 bass2:3, industrial*8]"


hush


d1
$ degradeBy 0.25 $ sound "<form-msp5:1*4> <form-msp5:2*4>"
# end (scale 0.022 0.044 $ sine1)

hush


# cut 1

hush

d2
$ sound "{msp/8 bd gabba:3/3, sd ~ ~ invaders:8 ~ ~ ~ rave2:4/3 ~ ~, ~ ~ ~ ~}%10"
# gain 0.9

d1 $ fastcat [sound "bd sn:2" # vowel "[a o]/2",
          sound "casio casio:1 casio:2*2",
          sound "~ ~ ~ ~",
          sound "drum drum:2 drum:3 drum:4*2"
         ]

d1 silence

d1 $ interlace (sound  "bd sn kurt") (sound "hh rs hh")

d1 $ (every 3 rev $ sound  "bd sn:2")

d1 $ stack [
  sound "bd/3",
  sound "hh*2 [sn cp] cp future*1",
  sound (samples "arpy*8" (run 64))
]
# gain "0.7"

d1 silence

d1 $ whenmod 5 3 (striate 20) $ stack [


sound (samples "arpy*8" (run 16))


d1 $ sound "odx:3/6 bd:1*2/4 ~ ~ ~ ~"

hush

d1 $ superimpose (slow 1.5) $ sound "bd sn [cp ht] hh"


d1 $ sound "odx(3,8)"

t1 clutch $ sound "[hh*4, odx(3,8)]"

hush

 d2
 $ spread ($) [slow 10, palindrome, slow 5, striate' 2 4, (# speed (scale 0.1 0.8 $ slow 5 $ sine1))]
 $ sound "superfork"
 # sustain 20

 d2 silence

 d1
 $ juxBy 0.9 (|*| speed "2")
 $ sound "msp"
 # note (irand(10))
 # gain 0.8
 # cutoff (scale 800 2850 $ slow 2 saw1)
 # resonance (scale 0.1 0.5 $ slow 19 $ sine1)
 # cut 1


$ spread ($) [slow 10, palindrome, slow 5, striate' 2 4, (# speed (scale 0.1 0.8 $ slow 5 $ sine1))]
# pan 0.1



hush
