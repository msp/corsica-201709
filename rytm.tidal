import Sound.Tidal.MIDI.Context
import Sound.Tidal.MIDI.Stream

import Sound.Tidal.MIDI.Rytm

displayOutputDevices >>= putStrLn

devices <- midiDevices

(cps, nudger, getNow) <- cpsUtils'

nudger (-0.02)

-- Currently edited version tidalcycles/tidal-midi 1.0-dev in /data/development/tidal-cycles/src/tidalcycles-tidal-midi
-- cabal-uninstall tidal-midi
-- cabal install

-- works for notes and some params e.g. perf2
-- not tried to sync with Live yet


m1 <- midiStream devices "Analog Rytm Elektron MIDI" 1 rytmController

m2 <- midiStream devices "Analog Rytm Elektron MIDI" 2 rytmController


-- SYNC TEST

m1
$ midinote "4 4"

m1 silence

-- END SYNC TEST

m1
$ midinote "{4 0 0 5, 1 2 3, 8 9 8 9, 10 11 11?}"
# synth1 (slow 2 $ sine)

m1 silence

m1
$ every 16 (# sampbr (scale 0.0 0.4 $ rand))
$ degradeBy 0.1
$ midinote "[0*8, 9*8]"

# filtfrq (scale 0.4 0.8 $ sine)

# sampbr (scale 0.0 0.4 $ rand)

m1
$ degradeBy 0
$ midinote "[{2 4} 1 5]"
# tun (slow 5 $ sine)
# perf2 (slow 8 $ sine)

m2
$ fast 1
$ degradeBy 0.3
$ midinote "[0*2, 3, 4*2, 5*4, 6 7, 6, 9 7 7, 0 0 0 1]"
# speed 3

m2 silence

# synth1 (slow 2 $ sine)


d1
$ every 4 (# speed 0.87)
$ degradeBy 0.1
$ sound "cp"
# shape 0.5
# gain 0.9

d1 silence

d1
$ every 8 (# speed 3)
$ degradeBy 0.3 $ sound "form-msp5:10*4"
# shape 0.1
# gain 1
# end (scale 0.05 0.19 $ slow 4(sine1))
# bpf (scale 1000 3000 $ fast 2(saw1))
# bpq 0.9
# pan (scale 0 1 $ fast 2(saw1))

d1 silence

m1 $ midinote "0(4,16)"

m1
$ slow 1
$ midinote "0 1*2? 0 2?"

m1 silence

m2 <- midiStream devices "Analog Rytm Elektron MIDI" 2 synthController


m2 $ midinote "{4 0 0 5, 1 2 3, 8 9 8 9, 10 11 11?}" # velocity (scale 0.1 1 $ saw)

m2 $ midinote "6 7" # velocity (scale 0.1 1 $ saw)

m2 $ midinote "[8 7, 8 9]"

m2 silence

hush

cps 1

d1 $ sound "{arpy? drum notes? can jvbass?, bd hh bd? rs}"

d1 silence
